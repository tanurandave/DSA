/******************************************************************************
given an array arr of integers, check if there exist two indices i and j such that :

i != j
0 <= i, j < arr.length
arr[i] == 2 * arr[j]
 

Example 1:

Input: arr = [10,2,5,3]
Output: true
Explanation: For i = 0 and j = 2, arr[i] == 10 == 2 * 5 == 2 * arr[j]
Example 2:

Input: arr = [3,1,7,11]
Output: false
Explanation: There is no i and j that satisfy the conditions.
 

Constraints:

2 <= arr.length <= 500
-103 <= arr[i] <= 103
*******************************************************************************/
import java.util.ArrayList;

class Solution {
    
    public boolean checkIfExist(int[] arr) {
        ArrayList<Integer> set = new ArrayList<>();
        for (int num : arr) {
            if (set.contains(num * 2) || (num % 2 == 0 && set.contains(num / 2))) {
                return true;
            }
            set.add(num);
        }
        return false;
    }
}
public class Main
{
	public static void main(String[] args) {
		Solution s=new Solution();
		int arr[]={10,2,5,3};//true
		int arr1[]={3,1,7,11};//false
    	Boolean result=s.checkIfExist(arr);
    	Boolean result1=s.checkIfExist(arr1);
		System.out.println(result);
		System.out.println(result1);
	
	}
}
