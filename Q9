package JULY_DSA_TASK;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Reverse_polish_natation {

	public int evalRPN(String[] tokens) {
		List<String> tokenlist=new ArrayList<>(Arrays.asList(tokens));
		return dfs(tokenlist);
	}
	private int dfs(List<String> tokens) {
		String token=tokens.remove(tokens.size()-1);
		if(!"+-*/".contains(token)) {
			return Integer.parseInt(token);
		}
		int right=dfs(tokens);
		int left=dfs(tokens);
		switch(token) {
		 
		case "+":
			return left+right;
		case "-":
			return left-right;
			
		case "*":
			return left*right;
		case "/":
			return left/right;
		}
		return 0;
	}
		
	
	public static void main(String[] args) {
	
		Reverse_polish_natation rpn=new Reverse_polish_natation();
		
		String[] input={"2", "1", "+", "3", "*"};
		
		int result=rpn.evalRPN(input);
		
		System.out.println("Result:"+result);
	}

}
